// Code generated by MockGen. DO NOT EDIT.
// Source: cache.go
//
// Generated by this command:
//
//	mockgen -source=cache.go -package=cache -destination=./cache_mock.go
//

// Package cache is a generated GoMock package.
package cache

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockRosaCache is a mock of RosaCache interface.
type MockRosaCache struct {
	ctrl     *gomock.Controller
	recorder *MockRosaCacheMockRecorder
}

// MockRosaCacheMockRecorder is the mock recorder for MockRosaCache.
type MockRosaCacheMockRecorder struct {
	mock *MockRosaCache
}

// NewMockRosaCache creates a new mock instance.
func NewMockRosaCache(ctrl *gomock.Controller) *MockRosaCache {
	mock := &MockRosaCache{ctrl: ctrl}
	mock.recorder = &MockRosaCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRosaCache) EXPECT() *MockRosaCacheMockRecorder {
	return m.recorder
}

// Dir mocks base method.
func (m *MockRosaCache) Dir() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dir")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dir indicates an expected call of Dir.
func (mr *MockRosaCacheMockRecorder) Dir() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dir", reflect.TypeOf((*MockRosaCache)(nil).Dir))
}

// Get mocks base method.
func (m *MockRosaCache) Get(k string) (any, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", k)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRosaCacheMockRecorder) Get(k any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRosaCache)(nil).Get), k)
}

// Items mocks base method.
func (m *MockRosaCache) Items() map[string]Item {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Items")
	ret0, _ := ret[0].(map[string]Item)
	return ret0
}

// Items indicates an expected call of Items.
func (mr *MockRosaCacheMockRecorder) Items() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Items", reflect.TypeOf((*MockRosaCache)(nil).Items))
}

// Set mocks base method.
func (m *MockRosaCache) Set(k string, x any, d time.Time) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", k, x, d)
}

// Set indicates an expected call of Set.
func (mr *MockRosaCacheMockRecorder) Set(k, x, d any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockRosaCache)(nil).Set), k, x, d)
}
